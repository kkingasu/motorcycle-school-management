package main.controller.student;

import main.business_logic.DefaultLogic;
import main.controller.MainController;
import main.database.student.StudentDatabaseLogic;
import main.models.StudentModel;
import main.ui.student.STUDENT;
import java.util.Date;

public class StudentController {
    public static void studentMenu() {
        System.out.print(STUDENT.MAIN_MENU);
        String studentId;
        try {
            String input = DefaultLogic.handleInput();
            int inputConvertedToInteger = Integer.parseInt(input);
            switch (inputConvertedToInteger) {
                case 1:
                    System.out.print(STUDENT.CREATE_STUDENT);
                    handleCreateStudentInput();
                    break;
                case 2:

                    System.out.print("Enter The Student ID To Edit:");
                    studentId =  DefaultLogic.handleInput();
                    if(StudentDatabaseLogic.validateStudentExists(studentId)){
                        System.out.print(STUDENT.EDIT_STUDENT);
                        StudentSubMenuController.studentEditStudentSubMenu(studentId);
                    }
                    else{
                        System.out.print("The Student Id That Has Been Entered Does Not Exist In The Database\n");
                        StudentController.studentMenu();
                    }
                    break;
                case 3:
                    System.out.println(STUDENT.REMOVE_STUDENT);
                    System.out.print("Enter The Student ID Of The Student To Remove:");
                    studentId = DefaultLogic.handleInput();
                    if(StudentDatabaseLogic.validateStudentExists(studentId)){
                      handleRemoveStudentInput(studentId);
                    }
                    else{
                        System.out.print("The Student Id That Has Been Entered Does Not Exist In The Database\n");
                        StudentController.studentMenu();
                    }

                    break;
                case 4:

                    StudentSubMenuController.studentViewStudentSubMenu();
                    break;
                case 5:
                    MainController.initializeMainMenu();
                    break;
                default:
                    // code block
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    public static void handleCreateStudentInput(){
        StudentModel studentModel = new StudentModel();
        //TODO: ENSURE THE ID is autogenerated
        System.out.println();
        System.out.print("Enter Student Name:");
        studentModel.setName(DefaultLogic.handleInput());
        System.out.print("Enter Student Address:");
        studentModel.setAddress(DefaultLogic.handleInput());
        System.out.print("Enter Student DOB(mm/dd/yyyy):");
        String dateInput = DefaultLogic.handleInput();
        // Send input to validator
        Date dateFormat = null;
        while (dateFormat == null) {
            try {
                dateFormat = validateDateInput(dateInput);
            }catch (Exception e) {
                System.out.print("Try again, please use format(mm/dd/yyyy):");
                dateInput = DefaultLogic.handleInput();
                dateFormat = validateDateInput(dateInput);
            }
        }
        studentModel.setDob(dateFormat);
        System.out.print("Enter Student Phone Number:");
        studentModel.setPhoneNumber(Integer.parseInt(DefaultLogic.handleInput()));

        StudentDatabaseLogic.submitCreateStudentDataToDatabase(studentModel);
       StudentController.studentMenu();
    }
    public static Date validateDateInput(String date) {
        Date parsedDate = new Date(date);
        if (parsedDate != null) {
            return parsedDate;
        } else {
            parsedDate = null;
            return parsedDate;
        }
    }

    public static void handleRemoveStudentInput(String studentId){
        StudentDatabaseLogic.deleteStudentDataFromDatabase(studentId);
        StudentController.studentMenu();
    }
    public static void handleViewAllStudentInput(){
        System.out.print(STUDENT.VIEW_ALL_STUDENTS);
        StudentDatabaseLogic.viewAllStudents();
        StudentSubMenuController.studentViewStudentSubMenu();
    }
}

